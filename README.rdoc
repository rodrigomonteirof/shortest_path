= \Shortest path

== Description

Algorithm to search shortest path.

== Challenge

By a logistics network with a map name, you should find the shortest path.

Input format example:

A B 10

B D 15

A C 20

C D 30

B E 50

D E 30

With the persisted data, you will receive a request like:

map: SP

origin: A

destiny: B

autonomy: 10

price: 2.5

And return the output:

A-B-D with cost 6.25

== Routes

The project has two routes:

Post in /map to create a route

  $ curl --data "name=SP&routes[]=A B 10&routes[]=B D 15&routes[]=A C 20&routes[]=C D 30&routes[]=B E 50&routes[]=D E 30" http://localhost:3000/maps

Get in /bestroute/$map/$origin/$destiny/$autonomy/$price.

  $ curl -isS "localhost:3000/bestroute/SP/A/D/9.5/250"

== Ruby version
This project was created with ruby version 2.2.0.

== Database creation
To create the database use the command db:migrate.

  $ rake db:create

You can populate the database with default values:

 $ rake db:seed

It will insert the default routes (routes described in test) to a map with 'SIMPLE' name.

  $ curl -isS "localhost:3000/bestroute/SIMPLE/A/D/10/250"

== How to run the test suite
Unit tests are written using RSpec ruby gem.

You can run with command bellow:

  $ RAILS_ENV=test rake db:migrate
  $ bundle exec rspec

This project uses gem mutant for increase the coverage, to run use:

  $ RAILS_ENV=test bundle exec mutant -r ./config/environment --use rspec Class(like RouterService)

You can check the coverage accessing coverage/index.html, generated after test suite.

== How to run the application
  $ bundle exec rails server
